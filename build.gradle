plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.diffplug.spotless" version "6.25.0"
    id("io.gatling.gradle") version "3.13.4"
}

group = 'net.szymonsawicki.net'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '23'
}

spotless {
    java {
        // Use the default importOrder configuration
        importOrder()
        toggleOffOn()
        removeUnusedImports()
        googleJavaFormat()
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springModulithVersion', "1.3.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.modulith:spring-modulith-starter-core'
    implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
    implementation'org.zalando:logbook-spring-boot-starter:3.5.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.springframework.modulith:spring-modulith-actuator'
    runtimeOnly 'org.springframework.modulith:spring-modulith-observability'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
    }
}

compileJava {
    options.compilerArgs << '-Amapstruct.defaultComponentModel=spring'
}



tasks.named('test') {
    useJUnitPlatform()
}
